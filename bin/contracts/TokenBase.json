{
    "contractName": "TokenBase",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol",
                    "type": "string"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "admin",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newAdmin",
                    "type": "address"
                }
            ],
            "name": "updateAdmin",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"updateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/dell/317-eth-bsc-decentralized-bridge/contracts/TokenBase.sol\":\"TokenBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/dell/317-eth-bsc-decentralized-bridge/contracts/TokenBase.sol\":{\"keccak256\":\"0xf823c81d0f0f835ca4a1fb8778ed983557db32122d2d09c00515d6e557a896cf\",\"urls\":[\"bzz-raw://d2855cfbfc32cd2605bf42a616ffe7c8211820c9a8d1ee9b82da63781a3cd48f\",\"dweb:/ipfs/QmRg29r4z42KNMfjCZLiHjnEKHy7GgVkG8jFMgRVv1gN9b\"]},\"/home/dell/317-eth-bsc-decentralized-bridge/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"/home/dell/317-eth-bsc-decentralized-bridge/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/home/dell/317-eth-bsc-decentralized-bridge/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b5060405162000f5838038062000f588339810160408190526200003491620001de565b8151829082906200004d90600390602085019062000081565b5080516200006390600490602084019062000081565b5050600580546001600160a01b03191633179055506200029b915050565b8280546200008f9062000248565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b600082601f8301126200013957600080fd5b81516001600160401b038082111562000156576200015662000285565b604051601f8301601f19908116603f0116810190828211818310171562000181576200018162000285565b816040528381526020925086838588010111156200019e57600080fd5b600091505b83821015620001c25785820183015181830184015290820190620001a3565b83821115620001d45760008385830101525b9695505050505050565b60008060408385031215620001f257600080fd5b82516001600160401b03808211156200020a57600080fd5b620002188683870162000127565b935060208501519150808211156200022f57600080fd5b506200023e8582860162000127565b9150509250929050565b600181811c908216806200025d57607f821691505b602082108114156200027f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610cad80620002ab6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101ee578063dd62ed3e14610201578063e2f273bd1461023a578063f851a4401461024d57600080fd5b806370a082311461019757806395d89b41146101c05780639dc29fac146101c8578063a457c2d7146101db57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610278565b60405161010f9190610b7e565b60405180910390f35b61012b610126366004610b54565b61030a565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610b18565b610320565b6040516012815260200161010f565b61012b61017d366004610b54565b6103d6565b610195610190366004610b54565b61040d565b005b61013f6101a5366004610ac3565b6001600160a01b031660009081526020819052604090205490565b610102610445565b6101956101d6366004610b54565b610454565b61012b6101e9366004610b54565b610488565b61012b6101fc366004610b54565b610523565b61013f61020f366004610ae5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610195610248366004610ac3565b610530565b600554610260906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b60606003805461028790610c26565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610c26565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b600061031733848461057c565b50600192915050565b600061032d8484846106a1565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103b75760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103cb85336103c68685610c0f565b61057c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103179185906103c6908690610bf7565b6005546001600160a01b031633146104375760405162461bcd60e51b81526004016103ae90610bd3565b6104418282610879565b5050565b60606004805461028790610c26565b6005546001600160a01b0316331461047e5760405162461bcd60e51b81526004016103ae90610bd3565b6104418282610958565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561050a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103ae565b61051933856103c68685610c0f565b5060019392505050565b60006103173384846106a1565b6005546001600160a01b0316331461055a5760405162461bcd60e51b81526004016103ae90610bd3565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166105de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ae565b6001600160a01b03821661063f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ae565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107055760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ae565b6001600160a01b0382166107675760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ae565b6001600160a01b038316600090815260208190526040902054818110156107df5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ae565b6107e98282610c0f565b6001600160a01b03808616600090815260208190526040808220939093559085168152908120805484929061081f908490610bf7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161086b91815260200190565b60405180910390a350505050565b6001600160a01b0382166108cf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ae565b80600260008282546108e19190610bf7565b90915550506001600160a01b0382166000908152602081905260408120805483929061090e908490610bf7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109b85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103ae565b6001600160a01b03821660009081526020819052604090205481811015610a2c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103ae565b610a368282610c0f565b6001600160a01b03841660009081526020819052604081209190915560028054849290610a64908490610c0f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610694565b80356001600160a01b0381168114610abe57600080fd5b919050565b600060208284031215610ad557600080fd5b610ade82610aa7565b9392505050565b60008060408385031215610af857600080fd5b610b0183610aa7565b9150610b0f60208401610aa7565b90509250929050565b600080600060608486031215610b2d57600080fd5b610b3684610aa7565b9250610b4460208501610aa7565b9150604084013590509250925092565b60008060408385031215610b6757600080fd5b610b7083610aa7565b946020939093013593505050565b600060208083528351808285015260005b81811015610bab57858101830151858201604001528201610b8f565b81811115610bbd576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b60008219821115610c0a57610c0a610c61565b500190565b600082821015610c2157610c21610c61565b500390565b600181811c90821680610c3a57607f821691505b60208210811415610c5b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122061a7b03272c610ba02030ad7deee51c53e304c9b165f491742a077a6a6225d2f64736f6c63430008070033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101ee578063dd62ed3e14610201578063e2f273bd1461023a578063f851a4401461024d57600080fd5b806370a082311461019757806395d89b41146101c05780639dc29fac146101c8578063a457c2d7146101db57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610278565b60405161010f9190610b7e565b60405180910390f35b61012b610126366004610b54565b61030a565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610b18565b610320565b6040516012815260200161010f565b61012b61017d366004610b54565b6103d6565b610195610190366004610b54565b61040d565b005b61013f6101a5366004610ac3565b6001600160a01b031660009081526020819052604090205490565b610102610445565b6101956101d6366004610b54565b610454565b61012b6101e9366004610b54565b610488565b61012b6101fc366004610b54565b610523565b61013f61020f366004610ae5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610195610248366004610ac3565b610530565b600554610260906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b60606003805461028790610c26565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610c26565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b600061031733848461057c565b50600192915050565b600061032d8484846106a1565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103b75760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103cb85336103c68685610c0f565b61057c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103179185906103c6908690610bf7565b6005546001600160a01b031633146104375760405162461bcd60e51b81526004016103ae90610bd3565b6104418282610879565b5050565b60606004805461028790610c26565b6005546001600160a01b0316331461047e5760405162461bcd60e51b81526004016103ae90610bd3565b6104418282610958565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561050a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103ae565b61051933856103c68685610c0f565b5060019392505050565b60006103173384846106a1565b6005546001600160a01b0316331461055a5760405162461bcd60e51b81526004016103ae90610bd3565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166105de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ae565b6001600160a01b03821661063f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ae565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107055760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ae565b6001600160a01b0382166107675760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ae565b6001600160a01b038316600090815260208190526040902054818110156107df5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ae565b6107e98282610c0f565b6001600160a01b03808616600090815260208190526040808220939093559085168152908120805484929061081f908490610bf7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161086b91815260200190565b60405180910390a350505050565b6001600160a01b0382166108cf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ae565b80600260008282546108e19190610bf7565b90915550506001600160a01b0382166000908152602081905260408120805483929061090e908490610bf7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109b85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103ae565b6001600160a01b03821660009081526020819052604090205481811015610a2c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103ae565b610a368282610c0f565b6001600160a01b03841660009081526020819052604081209190915560028054849290610a64908490610c0f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610694565b80356001600160a01b0381168114610abe57600080fd5b919050565b600060208284031215610ad557600080fd5b610ade82610aa7565b9392505050565b60008060408385031215610af857600080fd5b610b0183610aa7565b9150610b0f60208401610aa7565b90509250929050565b600080600060608486031215610b2d57600080fd5b610b3684610aa7565b9250610b4460208501610aa7565b9150604084013590509250925092565b60008060408385031215610b6757600080fd5b610b7083610aa7565b946020939093013593505050565b600060208083528351808285015260005b81811015610bab57858101830151858201604001528201610b8f565b81811115610bbd576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b60008219821115610c0a57610c0a610c61565b500190565b600082821015610c2157610c21610c61565b500390565b600181811c90821680610c3a57607f821691505b60208210811415610c5b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122061a7b03272c610ba02030ad7deee51c53e304c9b165f491742a077a6a6225d2f64736f6c63430008070033",
    "sourceMap": "139:551:0:-:0;;;196:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:13:1;;256:4:0;;262:6;;1909:13:1;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1932:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;276:5:0::1;:18:::0;;-1:-1:-1;;;;;;276:18:0::1;284:10;276:18;::::0;;-1:-1:-1;139:551:0;;-1:-1:-1;;139:551:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;139:551:0;;;-1:-1:-1;139:551:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:4;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:4;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:4;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:4:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:4;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;139:551:0;;;;;;",
    "deployedSourceMap": "139:551:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:4;;1606:22;1588:41;;1576:2;1561:18;4091:166:1;1448:187:4;3082:106:1;3169:12;;3082:106;;;6732:25:4;;;6720:2;6705:18;3082:106:1;6586:177:4;4724:414:1;;;;;;:::i;:::-;;:::i;2940:82::-;;;3013:2;6910:36:4;;6898:2;6883:18;2940:82:1;6768:184:4;5533:212:1;;;;;;:::i;:::-;;:::i;430:124:0:-;;;;;;:::i;:::-;;:::i;:::-;;3246:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3346:18:1;3320:7;3346:18;;;;;;;;;;;;3246:125;2223:93;;;:::i;558:130:0:-;;;;;;:::i;:::-;;:::i;6232:371:1:-;;;;;;:::i;:::-;;:::i;3574:172::-;;;;;;:::i;:::-;;:::i;3804:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3919:18:1;;;3893:7;3919:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3804:149;303:123:0;;;;;;:::i;:::-;;:::i;171:20::-;;;;;-1:-1:-1;;;;;171:20:0;;;;;;-1:-1:-1;;;;;1404:32:4;;;1386:51;;1374:2;1359:18;171:20:0;1240:203:4;2021:89:1;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;665:10:3;4213:7:1;4222:6;4190:8;:39::i;:::-;-1:-1:-1;4246:4:1;4091:166;;;;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;-1:-1:-1;;;;;4920:19:1;;4893:24;4920:19;;;:11;:19;;;;;;;;665:10:3;4920:33:1;;;;;;;;4971:26;;;;4963:79;;;;-1:-1:-1;;;4963:79:1;;4400:2:4;4963:79:1;;;4382:21:4;4439:2;4419:18;;;4412:30;4478:34;4458:18;;;4451:62;-1:-1:-1;;;4529:18:4;;;4522:38;4577:19;;4963:79:1;;;;;;;;;5052:57;5061:6;665:10:3;5083:25:1;5102:6;5083:16;:25;:::i;:::-;5052:8;:57::i;:::-;-1:-1:-1;5127:4:1;;4724:414;-1:-1:-1;;;;4724:414:1:o;5533:212::-;665:10:3;5621:4:1;5669:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5669:34:1;;;;;;;;;;5621:4;;5637:80;;5660:7;;5669:47;;5706:10;;5669:47;:::i;430:124:0:-;506:5;;-1:-1:-1;;;;;506:5:0;492:10;:19;484:42;;;;-1:-1:-1;;;484:42:0;;;;;;;:::i;:::-;532:17;538:2;542:6;532:5;:17::i;:::-;430:124;;:::o;2223:93:1:-;2270:13;2302:7;2295:14;;;;;:::i;558:130:0:-;637:5;;-1:-1:-1;;;;;637:5:0;623:10;:19;615:42;;;;-1:-1:-1;;;615:42:0;;;;;;;:::i;:::-;663:20;669:5;676:6;663:5;:20::i;6232:371:1:-;665:10:3;6325:4:1;6368:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6368:34:1;;;;;;;;;;6420:35;;;;6412:85;;;;-1:-1:-1;;;6412:85:1;;6022:2:4;6412:85:1;;;6004:21:4;6061:2;6041:18;;;6034:30;6100:34;6080:18;;;6073:62;-1:-1:-1;;;6151:18:4;;;6144:35;6196:19;;6412:85:1;5820:401:4;6412:85:1;6507:67;665:10:3;6530:7:1;6539:34;6558:15;6539:16;:34;:::i;6507:67::-;-1:-1:-1;6592:4:1;;6232:371;-1:-1:-1;;;6232:371:1:o;3574:172::-;3660:4;3676:42;665:10:3;3700:9:1;3711:6;3676:9;:42::i;303:123:0:-;379:5;;-1:-1:-1;;;;;379:5:0;365:10;:19;357:42;;;;-1:-1:-1;;;357:42:0;;;;;;;:::i;:::-;405:5;:16;;-1:-1:-1;;;;;;405:16:0;-1:-1:-1;;;;;405:16:0;;;;;;;;;;303:123::o;9496:340:1:-;-1:-1:-1;;;;;9597:19:1;;9589:68;;;;-1:-1:-1;;;9589:68:1;;5617:2:4;9589:68:1;;;5599:21:4;5656:2;5636:18;;;5629:30;5695:34;5675:18;;;5668:62;-1:-1:-1;;;5746:18:4;;;5739:34;5790:19;;9589:68:1;5415:400:4;9589:68:1;-1:-1:-1;;;;;9675:21:1;;9667:68;;;;-1:-1:-1;;;9667:68:1;;3251:2:4;9667:68:1;;;3233:21:4;3290:2;3270:18;;;3263:30;3329:34;3309:18;;;3302:62;-1:-1:-1;;;3380:18:4;;;3373:32;3422:19;;9667:68:1;3049:398:4;9667:68:1;-1:-1:-1;;;;;9746:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9797:32;;6732:25:4;;;9797:32:1;;6705:18:4;9797:32:1;;;;;;;;9496:340;;;:::o;7077:592::-;-1:-1:-1;;;;;7182:20:1;;7174:70;;;;-1:-1:-1;;;7174:70:1;;5211:2:4;7174:70:1;;;5193:21:4;5250:2;5230:18;;;5223:30;5289:34;5269:18;;;5262:62;-1:-1:-1;;;5340:18:4;;;5333:35;5385:19;;7174:70:1;5009:401:4;7174:70:1;-1:-1:-1;;;;;7262:23:1;;7254:71;;;;-1:-1:-1;;;7254:71:1;;2444:2:4;7254:71:1;;;2426:21:4;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:4;;;2566:33;2616:19;;7254:71:1;2242:399:4;7254:71:1;-1:-1:-1;;;;;7418:17:1;;7394:21;7418:17;;;;;;;;;;;7453:23;;;;7445:74;;;;-1:-1:-1;;;7445:74:1;;3654:2:4;7445:74:1;;;3636:21:4;3693:2;3673:18;;;3666:30;3732:34;3712:18;;;3705:62;-1:-1:-1;;;3783:18:4;;;3776:36;3829:19;;7445:74:1;3452:402:4;7445:74:1;7549:22;7565:6;7549:13;:22;:::i;:::-;-1:-1:-1;;;;;7529:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7581:20;;;;;;;;:30;;7605:6;;7529:9;7581:30;;7605:6;;7581:30;:::i;:::-;;;;;;;;7644:9;-1:-1:-1;;;;;7627:35:1;7636:6;-1:-1:-1;;;;;7627:35:1;;7655:6;7627:35;;;;6732:25:4;;6720:2;6705:18;;6586:177;7627:35:1;;;;;;;;7164:505;7077:592;;;:::o;7940:330::-;-1:-1:-1;;;;;8023:21:1;;8015:65;;;;-1:-1:-1;;;8015:65:1;;6428:2:4;8015:65:1;;;6410:21:4;6467:2;6447:18;;;6440:30;6506:33;6486:18;;;6479:61;6557:18;;8015:65:1;6226:355:4;8015:65:1;8167:6;8151:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8183:18:1;;:9;:18;;;;;;;;;;:28;;8205:6;;8183:9;:28;;8205:6;;8183:28;:::i;:::-;;;;-1:-1:-1;;8226:37:1;;6732:25:4;;;-1:-1:-1;;;;;8226:37:1;;;8243:1;;8226:37;;6720:2:4;6705:18;8226:37:1;;;;;;;7940:330;;:::o;8590:483::-;-1:-1:-1;;;;;8673:21:1;;8665:67;;;;-1:-1:-1;;;8665:67:1;;4809:2:4;8665:67:1;;;4791:21:4;4848:2;4828:18;;;4821:30;4887:34;4867:18;;;4860:62;-1:-1:-1;;;4938:18:4;;;4931:31;4979:19;;8665:67:1;4607:397:4;8665:67:1;-1:-1:-1;;;;;8828:18:1;;8803:22;8828:18;;;;;;;;;;;8864:24;;;;8856:71;;;;-1:-1:-1;;;8856:71:1;;2848:2:4;8856:71:1;;;2830:21:4;2887:2;2867:18;;;2860:30;2926:34;2906:18;;;2899:62;-1:-1:-1;;;2977:18:4;;;2970:32;3019:19;;8856:71:1;2646:398:4;8856:71:1;8958:23;8975:6;8958:14;:23;:::i;:::-;-1:-1:-1;;;;;8937:18:1;;:9;:18;;;;;;;;;;:44;;;;8991:12;:22;;9007:6;;8937:9;8991:22;;9007:6;;8991:22;:::i;:::-;;;;-1:-1:-1;;9029:37:1;;6732:25:4;;;9055:1:1;;-1:-1:-1;;;;;9029:37:1;;;;;6720:2:4;6705:18;9029:37:1;6586:177:4;14:173;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:4:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:4:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:4;2200:15;-1:-1:-1;;2196:29:4;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:4:o;3859:334::-;4061:2;4043:21;;;4100:2;4080:18;;;4073:30;-1:-1:-1;;;4134:2:4;4119:18;;4112:40;4184:2;4169:18;;3859:334::o;6957:128::-;6997:3;7028:1;7024:6;7021:1;7018:13;7015:39;;;7034:18;;:::i;:::-;-1:-1:-1;7070:9:4;;6957:128::o;7090:125::-;7130:4;7158:1;7155;7152:8;7149:34;;;7163:18;;:::i;:::-;-1:-1:-1;7200:9:4;;7090:125::o;7220:380::-;7299:1;7295:12;;;;7342;;;7363:61;;7417:4;7409:6;7405:17;7395:27;;7363:61;7470:2;7462:6;7459:14;7439:18;7436:38;7433:161;;;7516:10;7511:3;7507:20;7504:1;7497:31;7551:4;7548:1;7541:15;7579:4;7576:1;7569:15;7433:161;;7220:380;;;:::o;7605:127::-;7666:10;7661:3;7657:20;7654:1;7647:31;7697:4;7694:1;7687:15;7721:4;7718:1;7711:15",
    "sourcePath": "/home/dell/317-eth-bsc-decentralized-bridge/contracts/TokenBase.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.7+commit.e28d00a7"
    },
    "ast": {
        "absolutePath": "/home/dell/317-eth-bsc-decentralized-bridge/contracts/TokenBase.sol",
        "exportedSymbols": {
            "Context": [
                686
            ],
            "ERC20": [
                585
            ],
            "IERC20": [
                663
            ],
            "TokenBase": [
                84
            ]
        },
        "id": 85,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:23:0"
            },
            {
                "absolutePath": "/home/dell/317-eth-bsc-decentralized-bridge/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/home/dell/317-eth-bsc-decentralized-bridge/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 85,
                "sourceUnit": 586,
                "src": "25:112:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 585,
                            "src": "161:5:0"
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "161:5:0"
                    }
                ],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 84,
                "linearizedBaseContracts": [
                    84,
                    585,
                    663,
                    686
                ],
                "name": "TokenBase",
                "nameLocation": "148:9:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "f851a440",
                        "id": 6,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "186:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 84,
                        "src": "171:20:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 5,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "171:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 22,
                            "nodeType": "Block",
                            "src": "270:29:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 20,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 17,
                                            "name": "admin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6,
                                            "src": "276:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 18,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "284:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 19,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "284:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "276:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 21,
                                    "nodeType": "ExpressionStatement",
                                    "src": "276:18:0"
                                }
                            ]
                        },
                        "id": 23,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 13,
                                        "name": "name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8,
                                        "src": "256:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 14,
                                        "name": "symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "262:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    }
                                ],
                                "id": 15,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 12,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 585,
                                    "src": "250:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "250:19:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 11,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 8,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nameLocation": "222:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 23,
                                    "src": "208:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 7,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "208:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 10,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nameLocation": "242:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 23,
                                    "src": "228:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 9,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "228:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "207:42:0"
                        },
                        "returnParameters": {
                            "id": 16,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "270:0:0"
                        },
                        "scope": 84,
                        "src": "196:103:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 40,
                            "nodeType": "Block",
                            "src": "351:75:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 32,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 29,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "365:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 30,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "365:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 31,
                                                    "name": "admin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 6,
                                                    "src": "379:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "365:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "6f6e6c792061646d696e",
                                                "id": 33,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "386:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                                                    "typeString": "literal_string \"only admin\""
                                                },
                                                "value": "only admin"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                                                    "typeString": "literal_string \"only admin\""
                                                }
                                            ],
                                            "id": 28,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "357:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 34,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "357:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 35,
                                    "nodeType": "ExpressionStatement",
                                    "src": "357:42:0"
                                },
                                {
                                    "expression": {
                                        "id": 38,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 36,
                                            "name": "admin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6,
                                            "src": "405:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 37,
                                            "name": "newAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 25,
                                            "src": "413:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "405:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 39,
                                    "nodeType": "ExpressionStatement",
                                    "src": "405:16:0"
                                }
                            ]
                        },
                        "functionSelector": "e2f273bd",
                        "id": 41,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "updateAdmin",
                        "nameLocation": "312:11:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 26,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 25,
                                    "mutability": "mutable",
                                    "name": "newAdmin",
                                    "nameLocation": "332:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 41,
                                    "src": "324:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 24,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "324:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "323:18:0"
                        },
                        "returnParameters": {
                            "id": 27,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "351:0:0"
                        },
                        "scope": 84,
                        "src": "303:123:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 61,
                            "nodeType": "Block",
                            "src": "478:76:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 52,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 49,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "492:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 50,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "492:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 51,
                                                    "name": "admin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 6,
                                                    "src": "506:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "492:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "6f6e6c792061646d696e",
                                                "id": 53,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "513:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                                                    "typeString": "literal_string \"only admin\""
                                                },
                                                "value": "only admin"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                                                    "typeString": "literal_string \"only admin\""
                                                }
                                            ],
                                            "id": 48,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "484:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 54,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "484:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 55,
                                    "nodeType": "ExpressionStatement",
                                    "src": "484:42:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 57,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "538:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 58,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 45,
                                                "src": "542:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 56,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 466,
                                            "src": "532:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 59,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "532:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 60,
                                    "nodeType": "ExpressionStatement",
                                    "src": "532:17:0"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "id": 62,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "439:4:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 46,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 43,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "452:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 62,
                                    "src": "444:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 42,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "444:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 45,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "461:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 62,
                                    "src": "456:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 44,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "456:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "443:25:0"
                        },
                        "returnParameters": {
                            "id": 47,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "478:0:0"
                        },
                        "scope": 84,
                        "src": "430:124:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 82,
                            "nodeType": "Block",
                            "src": "609:79:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 73,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 70,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "623:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 71,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "623:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 72,
                                                    "name": "admin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 6,
                                                    "src": "637:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "623:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "6f6e6c792061646d696e",
                                                "id": 74,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "644:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                                                    "typeString": "literal_string \"only admin\""
                                                },
                                                "value": "only admin"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                                                    "typeString": "literal_string \"only admin\""
                                                }
                                            ],
                                            "id": 69,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "615:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 75,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "615:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 76,
                                    "nodeType": "ExpressionStatement",
                                    "src": "615:42:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 78,
                                                "name": "owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 64,
                                                "src": "669:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 79,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 66,
                                                "src": "676:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 77,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 528,
                                            "src": "663:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 80,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "663:20:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 81,
                                    "nodeType": "ExpressionStatement",
                                    "src": "663:20:0"
                                }
                            ]
                        },
                        "functionSelector": "9dc29fac",
                        "id": 83,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "burn",
                        "nameLocation": "567:4:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 67,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 64,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nameLocation": "580:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 83,
                                    "src": "572:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 63,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "572:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 66,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "592:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 83,
                                    "src": "587:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 65,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "587:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "571:28:0"
                        },
                        "returnParameters": {
                            "id": 68,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "609:0:0"
                        },
                        "scope": 84,
                        "src": "558:130:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 85,
                "src": "139:551:0",
                "usedErrors": []
            }
        ],
        "src": "0:692:0"
    },
    "functionHashes": {
        "admin()": "f851a440",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(address,uint256)": "9dc29fac",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "updateAdmin(address)": "e2f273bd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "649000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "admin()": "2425",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24643",
            "balanceOf(address)": "2563",
            "burn(address,uint256)": "infinite",
            "decimals()": "222",
            "decreaseAllowance(address,uint256)": "27036",
            "increaseAllowance(address,uint256)": "27002",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2349",
            "transfer(address,uint256)": "51251",
            "transferFrom(address,address,uint256)": "infinite",
            "updateAdmin(address)": "26777"
        }
    }
}